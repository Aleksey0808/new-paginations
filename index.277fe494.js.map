{"mappings":"IAUAA,EAVA,SAA2BC,EAAa,GAOtC,OAAOC,MANK,sDAAsDD,IAClD,CACdE,QAAS,CACPC,cAAe,iCAGQC,MAAKC,GAAKA,EAAEC,Q,ECJzC,MAAMC,EAAgBC,SAASC,cAAc,eAC7C,IAAIC,EAAoB,EAOT,SAAAC,EAAoBC,EAAaC,GAC9C,IAAIC,EAAS,GAKbJ,EAAoBE,EAEhBA,EAAc,IAChBE,GAAU,qBACVA,GAAU,cAERF,EAAc,IAChBE,GAAU,gBAERF,EAAc,IAChBE,GAAU,OAdQF,EAAc,UAgB9BA,EAAc,IAChBE,GAAU,OAhBKF,EAAc,UAkB/BE,GAAU,UAAUF,aAEhBC,EAAW,EAAID,IACjBE,GAAU,OApBIF,EAAc,UAsB1BC,EAAW,EAAID,IACjBE,GAAU,OAtBOF,EAAc,UAwB7BC,EAAW,EAAID,IACjBE,GAAU,gBAGRD,EAAWD,IACbE,GAAU,OAAOD,SACjBC,GAAU,sBAEZP,EAAcQ,UAAYD,C,CAG5BP,EAAcS,iBAAiB,SAE/B,SAA2BC,GACzB,GAA4B,OAAxBA,EAAIC,OAAOC,SACb,OAEF,GAA+B,QAA3BF,EAAIC,OAAOE,YACb,OAEF,GAA+B,OAA3BH,EAAIC,OAAOE,YAKb,YAJArB,EAAWW,GAAqB,GAAIN,MAAKiB,IACvCC,EAAaD,EAAKE,MAClBZ,EAAWU,EAAKG,KAAMH,EAAKI,MAAM,IAIrC,GAA+B,OAA3BR,EAAIC,OAAOE,YAKb,YAJArB,EAAWW,GAAqB,GAAIN,MAAKiB,IACvCC,EAAaD,EAAKE,MAClBZ,EAAWU,EAAKG,KAAMH,EAAKI,MAAM,IAIrC,MAAMD,EAAOP,EAAIC,OAAOE,YACxBrB,EAAUyB,GAAMpB,MAAKiB,IACnBC,EAAaD,EAAKE,MAClBZ,EAAWU,EAAKG,KAAMH,EAAKI,MAAM,G,IC1ErC,MAAMC,EAAOlB,SAASC,cAAc,UAE7B,SAASa,EAAaK,GAC3B,MAAMb,EAASa,EAAIC,QACjB,CAACC,GAAKC,KAAEA,EAAIC,KAAEA,KAAWF,EAAM,WAAWC,aAAgBC,eAC1D,IAEFL,EAAKX,UAAYD,C,CAGnBf,IAAoBK,MAAKiB,IACvBW,QAAQC,IAAIZ,GACZC,EAAaD,EAAKE,MAClBZ,EAAWU,EAAKG,KAAMH,EAAKI,MAAM","sources":["src/js/fetchLord.js","src/js/pagination.js","src/index.js"],"sourcesContent":["function searchVCharacters(pageNumber = 1) {\n  const URL = `https://the-one-api.dev/v2/character?limit=20&page=${pageNumber}`;\n  const options = {\n    headers: {\n      Authorization: 'Bearer GAepmfdXiazfYX4VUu4M',\n    },\n  };\n  return fetch(URL, options).then(r => r.json());\n}\n\nexport default searchVCharacters;\n","import fetchLord from './fetchLord';\nimport { createMarkup } from '../index';\n\nconst paginationBox = document.querySelector('.pagination');\nlet globalCurrentPage = 0;\n/**\n *Create pagination\n * @param {Number} currentPage - current page for search\n * @param {Number} allPage - all pages for search\n * @return {String} markup - for pagination\n */\nexport default function pagination(currentPage, allPages) {\n  let markup = '';\n  let beforeTwoPage = currentPage - 2;\n  let beforePage = currentPage - 1;\n  let afterPage = currentPage + 1;\n  let afterTwoPage = currentPage + 2;\n  globalCurrentPage = currentPage;\n\n  if (currentPage > 1) {\n    markup += `<li>&#129144;</li>`;\n    markup += `<li>1</li>`;\n  }\n  if (currentPage > 4) {\n    markup += `<li>...</li>`;\n  }\n  if (currentPage > 3) {\n    markup += `<li>${beforeTwoPage}</li>`;\n  }\n  if (currentPage > 2) {\n    markup += `<li>${beforePage}</li>`;\n  }\n  markup += `<li><b>${currentPage}</b></li>`;\n\n  if (allPages - 1 > currentPage) {\n    markup += `<li>${afterPage}</li>`;\n  }\n  if (allPages - 2 > currentPage) {\n    markup += `<li>${afterTwoPage}</li>`;\n  }\n  if (allPages - 3 > currentPage) {\n    markup += `<li>...</li>`;\n  }\n\n  if (allPages > currentPage) {\n    markup += `<li>${allPages}</li>`;\n    markup += `<li>&#129146;</li>`;\n  }\n  paginationBox.innerHTML = markup;\n}\n\npaginationBox.addEventListener('click', handlrePagination);\n\nfunction handlrePagination(evt) {\n  if (evt.target.nodeName !== 'LI') {\n    return;\n  }\n  if (evt.target.textContent === '...') {\n    return;\n  }\n  if (evt.target.textContent === 'ðŸ¡¸') {\n    fetchLord((globalCurrentPage -= 1)).then(data => {\n      createMarkup(data.docs);\n      pagination(data.page, data.pages);\n    });\n    return;\n  }\n  if (evt.target.textContent === 'ðŸ¡º') {\n    fetchLord((globalCurrentPage += 1)).then(data => {\n      createMarkup(data.docs);\n      pagination(data.page, data.pages);\n    });\n    return;\n  }\n  const page = evt.target.textContent;\n  fetchLord(page).then(data => {\n    createMarkup(data.docs);\n    pagination(data.page, data.pages);\n  });\n}\n","import pagination from './js/pagination';\nimport searchVCharacters from './js/fetchLord';\n\nconst list = document.querySelector('.cards');\n\nexport function createMarkup(arr) {\n  const markup = arr.reduce(\n    (acc, { name, race }) => acc + `<li><h2>${name}</h2><h3>${race}</h3></li>`,\n    ''\n  );\n  list.innerHTML = markup;\n}\n\nsearchVCharacters().then(data => {\n  console.log(data);\n  createMarkup(data.docs);\n  pagination(data.page, data.pages);\n});\n"],"names":["$cd5aaecc55d1d1f5$export$2e2bcd8739ae039","pageNumber","fetch","headers","Authorization","then","r","json","$1bab9c519cfa82bc$var$paginationBox","document","querySelector","$1bab9c519cfa82bc$var$globalCurrentPage","$1bab9c519cfa82bc$export$2e2bcd8739ae039","currentPage","allPages","markup","innerHTML","addEventListener","evt","target","nodeName","textContent","data","$1f0dc3b9307be026$export$24783e9f3a24abe4","docs","page","pages","$1f0dc3b9307be026$var$list","arr","reduce","acc","name","race","console","log"],"version":3,"file":"index.277fe494.js.map"}