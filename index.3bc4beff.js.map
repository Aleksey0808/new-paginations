{"mappings":"AAAAA,QAAQC,IAAI","sources":["src/index.js"],"sourcesContent":["console.log('hello world');\n\n// import fetchLord from './js/fetchLord';\n// import pagination from './js/pagination';\n// let pagination;\n\n// async function foo() {\n//   let obj = await import('./js/pagination');\n//   // return obj default;\n// }\n\n// import createMarkup from './js/createMarkup';\n// import searhVCharacters from './js/fetchLord';\n// import { entries } from 'lodash';\n\n// const list = document.querySelector('.cards');\n// const guard = document.querySelector('.js-guard');\n// let page = 1;\n\n// document.addEventListener('scroll', onScroll);\n// let count = 0;\n\n// function onScroll(evt) {\n//   count += 1;\n// }\n\n// const options = {\n//   root: null,\n//   rootMargin: '200px',\n//   threshold: 1,\n// };\n\n// const observer = new IntersectionObserver(onPagination, options);\n\n// function currentMarkup(arr) {\n//   const markup = arr.reduce(\n//     (acc, { name, race }) => acc + `<li><h2>${name}</h2><h3>${race}</h3></li>`\n//   );\n//   list.insertAdjacentHTML('beforeend', markup);\n// }\n\n// searhVCharacters().then(data => {\n//   createMarkup(data.docs);\n//   observer.observe(guard);\n// });\n\n// function onPagination() {\n//   entries.forEach(entry => {\n//     if (entry.isIntersecting) {\n//       page += 1;\n//       searhVCharacters(page).then(data => {\n//         createMarkup(data.docs);\n//         if (data.page === data.page) {\n//           observer.unobserve(guard);\n//         }\n//       });\n//     }\n//   });\n// }\n"],"names":["console","log"],"version":3,"file":"index.3bc4beff.js.map"}